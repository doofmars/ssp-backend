/**
* SSP-Online Backend
* This is a the backend for the SSP Online Game. It is a RESTful API that is used by the frontend to play the game.  Some useful links: - [ssp-online](https://github.com/doofmars/ssp-online) - The source code for the SSP Online Game - [ssp-backend](https://github.com/doofmars/ssp-backend) - The source code for the SSP Backend
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package de.doofmars.ssp.backend

import io.ktor.resources.*
import kotlinx.serialization.*
import de.doofmars.ssp.backend.models.*

object Paths {
    /**
     * Do a turn
     * @param gameId ID of game to return 
     * @param gameGameIdTurnPostRequest  
     */
    @Serializable @Resource("/game/{gameId}/turn")
    class GameGameIdTurnPost(val gameId: String, val gameGameIdTurnPostRequest: GameGameIdTurnPostRequest)

    /**
     * Get information about a game
     * @param gameId ID of game to return 
     */
    @Serializable @Resource("/game/{gameId}") class GameGameIdGet(val gameId: String)

    /**
     * Create a new game
     * @param createGame  
     */
    @Serializable @Resource("/game") class GamePut(val createGame: CreateGame)

    /**
     * Get all games
     * @param status Status of the game (optional)
     */
    @Serializable @Resource("/games") class GamesGet(val status: GameStatus? = null)

}

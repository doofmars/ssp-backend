additionalProperties:
  artifactId: ssp-backend
  groupId: de.doofmars
  packageName: de.doofmars.ssp.backend
  enumPropertyNaming: UPPERCASE
# additionalModelTypeAnnotations
#             Additional annotations for model type(class level annotations). List separated by semicolon(;) or new line (Linux or Windows)

#         apiSuffix
#             suffix for api classes (Default: Api)
#         artifactId
#             Generated artifact id (name of jar). (Default: kotlin-server)

#         artifactVersion
#             Generated artifact's package version. (Default: 1.0.0)

#         enumPropertyNaming
#             Naming convention for enum properties: 'camelCase', 'PascalCase', 'snake_case', 'UPPERCASE', and 'original' (Default: camelCase)

#         featureAutoHead
#             Automatically provide responses to HEAD requests for existing routes that have the GET verb defined. (Default: true)

#         featureCORS
#             Ktor by default provides an interceptor for implementing proper support for Cross-Origin Resource Sharing (CORS). See enable-cors.org. (Default: false)

#         featureCompression
#             Adds ability to compress outgoing content using gzip, deflate or custom encoder and thus reduce size of the response. (Default: true)

#         featureConditionalHeaders
#             Avoid sending content if client already has same content, by checking ETag or LastModified properties. (Default: false)

#         featureHSTS
#             Avoid sending content if client already has same content, by checking ETag or LastModified properties. (Default: true)

#         featureMetrics
#             Enables metrics feature. (Default: true)

#         featureResources
#             Generates routes in a typed way, for both: constructing URLs and reading the parameters. (Default: true)

#         groupId
#             Generated artifact package's organization (i.e. maven groupId). (Default: org.openapitools)
#         interfaceOnly
#             Whether to generate only API interface stubs without the server files. This option is currently supported only when using jaxrs-spec library. (Default: false)

#         library
#             library template (sub-template) (Default: ktor)
#                 ktor - ktor framework
#                 jaxrs-spec - JAX-RS spec only

#         modelMutable
#             Create mutable models (Default: false)

#         omitGradleWrapper
#             Whether to omit Gradle wrapper for creating a sub project. (Default: false)

#         packageName
#             Generated artifact package name. (Default: org.openapitools.server)

#         parcelizeModels
#             toggle "@Parcelize" for generated models

#         returnResponse
#             Whether generate API interface should return javax.ws.rs.core.Response instead of a deserialized entity. Only useful if interfaceOnly is true. This option is currently supported only when using jaxrs-spec library. (Default: false)

#         serializableModel
#             boolean - toggle "implements Serializable" for generated models

#         sortModelPropertiesByRequiredFlag
#             Sort model properties to place required parameters before optional parameters.

#         sortParamsByRequiredFlag
#             Sort method arguments to place required parameters before optional parameters.

#         sourceFolder
#             source folder for generated code (Default: src/main/kotlin)

#         useBeanValidation
#             Use BeanValidation API annotations. This option is currently supported only when using jaxrs-spec library. (Default: false)

#         useCoroutines
#             Whether to use the Coroutines. This option is currently supported only when using jaxrs-spec library. (Default: false)

#         useJakartaEe
#             whether to use Jakarta EE namespace instead of javax (Default: false)

#         useMutiny
#             Whether to use Mutiny (should not be used with useCoroutines). This option is currently supported only when using jaxrs-spec library. (Default: false)
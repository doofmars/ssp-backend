version: '3'
services:
    # Database container
    mongo:
        image: mongo
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        expose:
            - "27017"
        volumes:
          - ./mongodb_data_container:/data/db

    # Admin interface for the database
    mongo-express:
        image: mongo-express
        restart: always
        expose:
            - "8081"
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example
            ME_CONFIG_BASICAUTH_USERNAME: admin
            ME_CONFIG_BASICAUTH_PASSWORD: example
            ME_CONFIG_SITE_BASEURL: /express
            ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
        depends_on:
            - mongo

    # Backend server for the game including swagger documentation
    backend:
        build:
            context: .
            dockerfile: Dockerfile
        expose:
            - "8080"
        environment:
            DB_HOST: mongo
            DB_USERNAME: root
            DB_PASSWORD: example
        depends_on:
            - mongo

    # Minimal admin frontend for the game
    admin-frontend:
        build:
            context: ./admin-frontend
            dockerfile: Dockerfile
        expose:
            - "80"
        depends_on:
            - backend

    # traefik-reverse-proxy this will be used to solve issues of cross-origin requests from the admin-frontend to the backend
    traefik:
        image: traefik:v2.10.7
        command:
            - "--api.insecure=true"
            - "--providers.file.filename=/etc/traefik/traefik.yml"
        ports:
            - "80:80"
            - "8080:8080"
        volumes:
            - ./traefik-config:/etc/traefik
        depends_on:
            - backend
            - admin-frontend

volumes:
    mongodb_data_container:
    traefik-config:
